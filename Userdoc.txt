Application was created using TDD approach. At the beginning I created simple stubs that I could base my tests upon then created tests and then actual implementations.

There are two types of tests. Unit tests and integration tests. The application consists of one entity (Shop) and two ValueObjects (Coordinates, Address) that group properties into a logical beings. In order to avoid excessive boilerplate code I decided to use Lombok library that autogenerates getters/setters, constructors and so on. In order to decouple domain objects from json representations, I created a set of DataTransferObjects.

To get around gmail sending requirements, I was forced to change the extension of one .bat file to .RENAME_ME and one .jar file to .RENAME_ME_JAR. Please change this back to .bat and .jar before continuing.

Building application(Gradle 2.10):
gradle build

Running application:
gradle bootRun

If unsuccesful try the gradle wrapper command: gradlew instead


When application is running, you can access an autogenerated client for easy API browsing.
{your-path}/swagger-ui.html


Available paths:

"/", GET : Simple healthcheck
"/nearest", GET : Returns the closest shop to provided coordinates in request params (customerLongitude, customerLatitude)
"/shops", GET : Returns all stored shops
"/shops", POST : Adds shops (and fetches it's coordinates from Google's API)

"/shops", POST schema:

{
"shopAddress": {
"number": 0,
"postCode": "string",
"street": "string"
},
"shopName": "string"
}"
